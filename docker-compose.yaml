services:
  postgres-db:
    container_name: article-db
    image: postgres:16.4
    restart: no
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - database
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: article-db
    healthcheck:
      test: pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5
  mongo:
    image: mongo:7.0.14
    restart: "no"
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - database
    healthcheck:
      test: echo 'db.runCommand({serverStatus:1}).ok' | mongosh admin -u $$MONGO_INITDB_ROOT_USERNAME -p $$MONGO_INITDB_ROOT_PASSWORD --quiet | grep 1
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5
  kafka:
    image: apache/kafka:3.9.0
    restart: "no"
    ports:
      - "9092:9092"
    volumes:
      - kafka_data:/var/lib/kafka/data
    healthcheck:
      test: kafka-topics --bootstrap-server localhost:9092 --list
      interval: 10s
      timeout: 5s
      start_period: 30s
      retries: 5
#  keycloak:
#    image: quay.io/keycloak/keycloak:26.0.5
#    environment:
#      KEYCLOAK_ADMIN: admin
#      KEYCLOAK_ADMIN_PASSWORD: admin
#    volumes:
#      - './config/keycloak/import:/opt/keycloak/data/import'
#    ports:
#      - "9080:8080"
#    command: start-dev --import-realm
volumes:
  postgres_data:
  mongo_data:
#  kafka_data:
networks:
  database:
    driver: bridge
