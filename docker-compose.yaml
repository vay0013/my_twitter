services:
  postgres-db:
    container_name: article-db
    image: postgres:16.4
    restart: no
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - database
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: article-db
    healthcheck:
      test: pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5
  mongo:
    image: mongo:7.0.14
    restart: "no"
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - database
    healthcheck:
      test: echo 'db.runCommand({serverStatus:1}).ok' | mongosh admin -u $$MONGO_INITDB_ROOT_USERNAME -p $$MONGO_INITDB_ROOT_PASSWORD --quiet | grep 1
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5
  keycloak:
    image: quay.io/keycloak/keycloak:26.0.5
    restart: "no"
    command:
      - "start-dev"
      - "--import-realm"
    ports:
      - "9080:9080"
    volumes:
      - ./config/keycloak/import:/opt/keycloak/data/import
    environment:
      KC_HTTP_PORT: 9080
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: dev-mem
      KC_HEALTH_ENABLED: "true"
    healthcheck:
      test:
        [ "CMD-SHELL", "{ exec 3<>/dev/tcp/localhost/9080 && echo -e \"GET /health/ready HTTP/1.1\nhost: localhost:9080\n\" >&3 && timeout --preserve-status 1 cat <&3 | grep -m 1 -q 'status.*UP'; }" ]
      interval: 10s
      timeout: 5s
      start_period: 60s
      retries: 5
volumes:
  postgres_data:
  mongo_data:
networks:
  database:
    driver: bridge
